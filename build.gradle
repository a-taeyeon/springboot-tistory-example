plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.tistory'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Web Starter
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Spring Boot DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Spring Boot Configuration Processor
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Spring Boot Test Starter
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// MySQL Connector
	runtimeOnly 'com.mysql:mysql-connector-j'

	// MyBatis Spring Boot Starter (호환 가능한 최신 버전)
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	// Spring Boot JDBC Starter
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// Spring Boot Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT 표준 API
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // 실제 구현체 (JWT 생성,서명,검증 기능)
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JWT 페이로드를 JSON 형식으로 처리

}

tasks.named('test') {
	useJUnitPlatform()
}
